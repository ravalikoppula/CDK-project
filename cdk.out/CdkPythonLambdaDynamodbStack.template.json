{
 "Resources": {
  "MyLambdaDynamoDBConstructRavaliTestTable7DDD1410": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "ravali-test"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CdkPythonLambdaDynamodbStack/MyLambdaDynamoDBConstruct/RavaliTestTable/Resource"
   }
  },
  "MyLambdaDynamoDBConstructMyLambdaFunctionServiceRole361F85E2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonLambdaDynamodbStack/MyLambdaDynamoDBConstruct/MyLambdaFunction/ServiceRole/Resource"
   }
  },
  "MyLambdaDynamoDBConstructMyLambdaFunctionServiceRoleDefaultPolicy95085171": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MyLambdaDynamoDBConstructRavaliTestTable7DDD1410",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "dynamodb:*",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MyLambdaDynamoDBConstructRavaliTestTable7DDD1410",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MyLambdaDynamoDBConstructMyLambdaFunctionServiceRoleDefaultPolicy95085171",
    "Roles": [
     {
      "Ref": "MyLambdaDynamoDBConstructMyLambdaFunctionServiceRole361F85E2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonLambdaDynamodbStack/MyLambdaDynamoDBConstruct/MyLambdaFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "MyLambdaDynamoDBConstructMyLambdaFunctionF8412FBF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "88ce834be32605dd3f0d4254f07a2302967cedb67b6cca4cc4fb663df60b2a62.zip"
    },
    "Handler": "lambda_handler.handler",
    "Role": {
     "Fn::GetAtt": [
      "MyLambdaDynamoDBConstructMyLambdaFunctionServiceRole361F85E2",
      "Arn"
     ]
    },
    "Runtime": "python3.8"
   },
   "DependsOn": [
    "MyLambdaDynamoDBConstructMyLambdaFunctionServiceRoleDefaultPolicy95085171",
    "MyLambdaDynamoDBConstructMyLambdaFunctionServiceRole361F85E2"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkPythonLambdaDynamodbStack/MyLambdaDynamoDBConstruct/MyLambdaFunction/Resource",
    "aws:asset:path": "asset.88ce834be32605dd3f0d4254f07a2302967cedb67b6cca4cc4fb663df60b2a62",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "MyLambdaDynamoDBConstructLambdaExecutionRoleAB6A2773": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonLambdaDynamodbStack/MyLambdaDynamoDBConstruct/LambdaExecutionRole/Resource"
   }
  },
  "MyLambdaDynamoDBConstructMyApiGateway6A6F7369": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "MyApiGateway"
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonLambdaDynamodbStack/MyLambdaDynamoDBConstruct/MyApiGateway/Resource"
   }
  },
  "MyLambdaDynamoDBConstructMyApiGatewayDeployment44C287F0bd434074bba1996c5f2fa16d55790b6b": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "MyLambdaDynamoDBConstructMyApiGateway6A6F7369"
    }
   },
   "DependsOn": [
    "MyLambdaDynamoDBConstructMyApiGatewayitemsPOSTC224121D",
    "MyLambdaDynamoDBConstructMyApiGatewayitemsD92C17ED"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkPythonLambdaDynamodbStack/MyLambdaDynamoDBConstruct/MyApiGateway/Deployment/Resource"
   }
  },
  "MyLambdaDynamoDBConstructMyApiGatewayDeploymentStageprod853A0641": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "MyLambdaDynamoDBConstructMyApiGatewayDeployment44C287F0bd434074bba1996c5f2fa16d55790b6b"
    },
    "RestApiId": {
     "Ref": "MyLambdaDynamoDBConstructMyApiGateway6A6F7369"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonLambdaDynamodbStack/MyLambdaDynamoDBConstruct/MyApiGateway/DeploymentStage.prod/Resource"
   }
  },
  "MyLambdaDynamoDBConstructMyApiGatewayitemsD92C17ED": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "MyLambdaDynamoDBConstructMyApiGateway6A6F7369",
      "RootResourceId"
     ]
    },
    "PathPart": "items",
    "RestApiId": {
     "Ref": "MyLambdaDynamoDBConstructMyApiGateway6A6F7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonLambdaDynamodbStack/MyLambdaDynamoDBConstruct/MyApiGateway/Default/items/Resource"
   }
  },
  "MyLambdaDynamoDBConstructMyApiGatewayitemsPOSTApiPermissionCdkPythonLambdaDynamodbStackMyLambdaDynamoDBConstructMyApiGateway22D7C6E8POSTitems35EECF48": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyLambdaDynamoDBConstructMyLambdaFunctionF8412FBF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyLambdaDynamoDBConstructMyApiGateway6A6F7369"
       },
       "/",
       {
        "Ref": "MyLambdaDynamoDBConstructMyApiGatewayDeploymentStageprod853A0641"
       },
       "/POST/items"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonLambdaDynamodbStack/MyLambdaDynamoDBConstruct/MyApiGateway/Default/items/POST/ApiPermission.CdkPythonLambdaDynamodbStackMyLambdaDynamoDBConstructMyApiGateway22D7C6E8.POST..items"
   }
  },
  "MyLambdaDynamoDBConstructMyApiGatewayitemsPOSTApiPermissionTestCdkPythonLambdaDynamodbStackMyLambdaDynamoDBConstructMyApiGateway22D7C6E8POSTitems98DEECA2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyLambdaDynamoDBConstructMyLambdaFunctionF8412FBF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyLambdaDynamoDBConstructMyApiGateway6A6F7369"
       },
       "/test-invoke-stage/POST/items"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonLambdaDynamodbStack/MyLambdaDynamoDBConstruct/MyApiGateway/Default/items/POST/ApiPermission.Test.CdkPythonLambdaDynamodbStackMyLambdaDynamoDBConstructMyApiGateway22D7C6E8.POST..items"
   }
  },
  "MyLambdaDynamoDBConstructMyApiGatewayitemsPOSTC224121D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MyLambdaDynamoDBConstructMyLambdaFunctionF8412FBF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "MyLambdaDynamoDBConstructMyApiGatewayitemsD92C17ED"
    },
    "RestApiId": {
     "Ref": "MyLambdaDynamoDBConstructMyApiGateway6A6F7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonLambdaDynamodbStack/MyLambdaDynamoDBConstruct/MyApiGateway/Default/items/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WPQU/DMAyFf8vuaWAMIe24DXHaRFW4T25iOtMmqRpHU1X1v5OkQ4yTP788P8dPcv38Ih9XcPWF0m3RUS2nDwbViiidJz1aME5H8RPqDsXhy2aYRQem1iCnt2AVk7Pp6Z5LHAx5H7tZEBg5VW6Zz7V0Hakx+zLNwm/O4D2yl7tUYi/3QbXIe/AooKcGGK8wyumYN1foeddTTrzhK/adGw1aTupdFw9q8u4Fot+FQWFO/m1uQQufkC9OJ2mhef7z5e+lILJNcrwH7gP/G498cFYT5+vLMUbYh43cyvV29e2JiiFYJoOyWuoPRkOAmYYBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonLambdaDynamodbStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "MyLambdaDynamoDBConstructMyApiGatewayEndpoint2E123EDA": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "MyLambdaDynamoDBConstructMyApiGateway6A6F7369"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "MyLambdaDynamoDBConstructMyApiGatewayDeploymentStageprod853A0641"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}